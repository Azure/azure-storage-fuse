parameters:
  - name: verbose_log
    displayName: 'Verbose Log'
    type: boolean
    default: false


stages:
  - stage: KernelBuild 
    jobs:
      # Ubuntu Tests
      - job: Set_1
        timeoutInMinutes: 900
        strategy:
          matrix:
            Ubuntu-22:
              AgentName: 'blobfuse-benchmark-ubn22'
              containerName: 'test-cnt-ubn-22-kernel'
        pool:
          name: "blobfuse-perf-pool"
          demands:
            - ImageOverride -equals $(AgentName)

        variables:
          - group: NightlyBlobFuse
          - name: ROOT_DIR
            value: "/usr/pipeline/workv2"
          - name: WORK_DIR
            value: "/usr/pipeline/workv2/go/src/azure-storage-fuse"
          - name: MOUNT_DIR
            value: "/usr/pipeline/workv2/blob_mnt"
          - name: TEMP_DIR
            value: "/usr/pipeline/workv2/temp"
          - name: BLOBFUSE2_CFG
            value: "/usr/pipeline/workv2/blobfuse2.yaml"
          - name: GOPATH
            value: "/usr/pipeline/workv2/go"

        steps:
          - template: 'azure-pipeline-templates/setup.yml'
            parameters:
              tags: $(tags)
              installStep:
                script: |
                  sudo apt-get update --fix-missing
                  sudo apt update
                  sudo apt-get install cmake gcc libfuse3-dev git parallel -y
                  sudo apt-get install fuse3 -y
                displayName: 'Install fuse'

          - script: |
              sudo apt-get install git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison -y
            displayName: 'Install kernel build dependencies'

          - script: |
                echo "Setting environment variables..."
                echo "export AZURE_STORAGE_ACCOUNT=$(NIGHTLY_STO_BLOB_ACC_NAME)" | sudo tee -a /etc/environment
                echo "export AZURE_STORAGE_KEY=$(NIGHTLY_STO_BLOB_ACC_KEY)" | sudo tee -a /etc/environment
                echo "export AZURE_STORAGE_AUTH_TYPE=KEY" | sudo tee -a /etc/environment
                echo "Environment variables set."
            displayName: 'Set environment variables'

          - script: |
                echo " AZURE_STORAGE_ACCOUNT: $AZURE_STORAGE_ACCOUNT"
                echo " AZURE_STORAGE_AUTH_TYPE: $AZURE_STORAGE_AUTH_TYPE"
            displayName: 'Display account name'

          - template: 'azure-pipeline-templates/blobfuse2-kernel-test.yml'
            parameters:
              mount_dir: $(MOUNT_DIR)
              temp_dir: $(TEMP_DIR)
              kversion: "6.10.2"
              idstring: 'Block-Cache'
              container: $(containerName)

  - stage: VScodeBuild
    jobs:
      # Ubuntu Tests
      - job: Set_1
        timeoutInMinutes: 900
        strategy:
          matrix:
            Ubuntu-22:
              AgentName: 'blobfuse-benchmark-ubn22'
              containerName: 'test-cnt-ubn-22'
        pool:
          name: "blobfuse-perf-pool"
          demands:
            - ImageOverride -equals $(AgentName)

        variables:
          - group: NightlyBlobFuse
          - name: ROOT_DIR
            value: "/usr/pipeline/workv2"
          - name: WORK_DIR
            value: "/usr/pipeline/workv2/go/src/azure-storage-fuse"
          - name: MOUNT_DIR
            value: "/usr/pipeline/workv2/blob_mnt"
          - name: TEMP_DIR
            value: "/usr/pipeline/workv2/temp"
          - name: BLOBFUSE2_CFG
            value: "/usr/pipeline/workv2/blobfuse2.yaml"
          - name: GOPATH
            value: "/usr/pipeline/workv2/go"

        steps:
          - template: 'azure-pipeline-templates/setup.yml'
            parameters:
              tags: $(tags)
              installStep:
                script: |
                  sudo apt-get update --fix-missing
                  sudo apt update
                  sudo apt-get install cmake gcc libfuse3-dev git parallel -y
                  sudo apt-get install fuse3 -y
                displayName: 'Install fuse'

          - script: |
              cd $(WORK_DIR)
              $(WORK_DIR)/blobfuse2 gen-test-config --config-file=azure_key_bc.yaml --container-name=$(containerName) --temp-path=$(TEMP_DIR) --output-file=$(BLOBFUSE2_CFG)
            displayName: Create Key Config File
            env:
              ACCOUNT_TYPE: 'block'
              NIGHTLY_STO_ACC_NAME: $(NIGHTLY_STO_BLOB_ACC_NAME)
              NIGHTLY_STO_ACC_KEY: $(NIGHTLY_STO_BLOB_ACC_KEY)
              ACCOUNT_ENDPOINT: 'https://$(NIGHTLY_STO_BLOB_ACC_NAME).blob.core.windows.net'
              VERBOSE_LOG: false
            continueOnError: false

          - script: cat $(BLOBFUSE2_CFG)
            displayName: Print config file

          - script:
              mkdir -p $(MOUNT_DIR)
              mkdir -p $(TEMP_DIR)
            displayName: "Create directory structure"

          - template: 'azure-pipeline-templates/mount.yml'
            parameters:
              working_dir: $(WORK_DIR)
              mount_dir: $(MOUNT_DIR)
              temp_dir: $(TEMP_DIR)
              ro_mount: false
              mountStep: 
                script: |
                  $(WORK_DIR)/blobfuse2 mount $(MOUNT_DIR) --config-file=$(BLOBFUSE2_CFG) --default-working-dir=$(WORK_DIR)
          
          - script: |
              cd $(MOUNT_DIR)
              git clone https://github.com/microsoft/vscode.git
            displayName: 'Clone VScode'

          - script: |
              cd $(MOUNT_DIR)/vscode
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            displayName: 'Install dependencies'

          - script: |
              cd $(MOUNT_DIR)/vscode
              sudo npm install -g yarn
            displayName: 'Install yarn'

          - script: | 
              cd $(MOUNT_DIR)/vscode
              yarn add ternary-stream json-stable-stringify-without-jsonify
            displayName: 'Add modules'

          - script: |
              cd $(MOUNT_DIR)/vscode
              sudo yarn 
            displayName: 'Build VScode'

          - script: |
              cd $(MOUNT_DIR)/vscode
              yarn compile
            displayName: 'Compile VScode'

          # Cleanup
          - template: 'azure-pipeline-templates/cleanup.yml'
            parameters:
              working_dir: $(WORK_DIR)
              mount_dir: $(MOUNT_DIR)
              temp_dir: $(TEMP_DIR)

  - stage: FineTuningTests
    jobs:
      # Ubuntu Tests
      - job: Set_1
        timeoutInMinutes: 900
        strategy:
          matrix:
            Ubuntu-22:
              AgentName: 'blobfuse-benchmark-ubn22'
              containerName: 'vishnu-fine-tuning-test1'
        pool:
          name: "blobfuse-perf-pool"
          demands:
            - ImageOverride -equals $(AgentName)

        variables:
          - group: NightlyBlobFuse
          - name: ROOT_DIR
            value: "/usr/pipeline/workv2"
          - name: WORK_DIR
            value: "/usr/pipeline/workv2/go/src/azure-storage-fuse"
          - name: MOUNT_DIR
            value: "/mnt/blobfusemount"
          - name: TEMP_DIR
            value: "/usr/pipeline/workv2/temp"
          - name: BLOBFUSE2_CFG
            value: "/usr/pipeline/workv2/blobfuse2.yaml"
          - name: GOPATH
            value: "/usr/pipeline/workv2/go"

        steps:
          - template: 'azure-pipeline-templates/setup.yml'
            parameters:
              tags: $(tags)
              installStep:
                script: |
                  sudo apt-get update --fix-missing
                  sudo apt update
                  sudo apt-get install cmake gcc libfuse3-dev git parallel -y
                  sudo apt-get install fuse3 -y
                displayName: 'Install fuse'

          - script: |
              sudo apt-get install python3 -y
              python3 --version
            displayName: 'Installing Python'

          - script: |
              cd $(WORK_DIR)
              $(WORK_DIR)/blobfuse2 gen-test-config --config-file=azure_key_bc.yaml --container-name=$(containerName) --temp-path=$(TEMP_DIR) --output-file=$(BLOBFUSE2_CFG)
            displayName: Create Key Config File
            env:
              ACCOUNT_TYPE: 'block'
              NIGHTLY_STO_ACC_NAME: $(NIGHTLY_STO_BLOB_ACC_NAME)
              NIGHTLY_STO_ACC_KEY: $(NIGHTLY_STO_BLOB_ACC_KEY)
              ACCOUNT_ENDPOINT: 'https://$(NIGHTLY_STO_BLOB_ACC_NAME).blob.core.windows.net'
              VERBOSE_LOG: false
            continueOnError: false

          - script: cat $(BLOBFUSE2_CFG)
            displayName: Print config file

          - script:
              mkdir -p $(MOUNT_DIR)
              mkdir -p $(TEMP_DIR)
            displayName: "Create directory structure"

          - template: 'azure-pipeline-templates/mount.yml'
            parameters:
              working_dir: $(WORK_DIR)
              mount_dir: $(MOUNT_DIR)
              temp_dir: $(TEMP_DIR)
              ro_mount: false
              mountStep: 
                script: |
                  $(WORK_DIR)/blobfuse2 mount $(MOUNT_DIR) --config-file=$(BLOBFUSE2_CFG) --default-working-dir=$(WORK_DIR)
          
          - script: |
              cd $(MOUNT_DIR)
              python3 finetuning/finetuning.py
            displayName: 'Run FineTuning Tests'

          - script: |
              cd $(MOUNT_DIR)
              python3 finetuning/loadcheckpoint.py
              expect -c 'spawn python3 loadcheckpoint.py; send "3\r"; interact'
            displayName: 'Load checkpoints'

          # Cleanup
          - template: 'azure-pipeline-templates/cleanup.yml'
            parameters:
              working_dir: $(WORK_DIR)
              mount_dir: $(MOUNT_DIR)
              temp_dir: $(TEMP_DIR)
 