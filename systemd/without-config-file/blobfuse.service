[Unit]
Description=A virtual file system adapter for Azure Blob storage.
After=network.target

[Service]

# Configures the mountpoint.
Environment=BlobMountingPoint=<path/to/the/mounting/point>
# Configures the tmp location for the cache. Always configure the fastest disk (SSD or ramdisk) for best performance.
Environment=BlobTmp=<path/to/the/temp/folder>
# Sets the name of the container in the storage account.
Environment=ContainerName=<container.name>

# Enables HTTPS communication with Blob storage. True by default. HTTPS must be if you are communicating to the Storage Container through OAuth.
Environment=BlobUseHttps=true
# Blobs will be cached in the temp folder for this many seconds. 120 seconds by default. During this time, blobfuse will not check whether the file is up to date or not.
Environment=BlobFileCacheTimeOutInSeconds=120
# Enables logs written to syslog. Set to LOG_WARNING by default. Allowed values are LOG_OFF|LOG_CRIT|LOG_ERR|LOG_WARNING|LOG_INFO|LOG_DEBUG
Environment=BlobLogLevel=LOG_WARNING
# Enables attributes of a blob being cached. False by default. (Only available in blobfuse 1.1.0 or above)
Environment=BlobUseAttrCache=false

# Specifies the storage account blobfuse targets.
Environment=AZURE_STORAGE_ACCOUNT=<account.name>
# Specifies the blob endpoint to use. Defaults to *.blob.core.windows.net, but is useful for targeting storage emulators.
# Environment=AZURE_STORAGE_BLOB_ENDPOINT=*.blob.core.windows.net

# Uncomment the block below when using account key auth
Environment=AZURE_STORAGE_AUTH_TYPE=Key
# Specifies the storage account key to use for authentication.
Environment=AZURE_STORAGE_ACCESS_KEY=<account.key>

# Uncomment the block below when using SAS token auth
# Environment=AZURE_STORAGE_AUTH_TYPE=SAS
# Specifies the storage account key to use for authentication.
# Environment=AZURE_STORAGE_SAS_TOKEN=<sas.token>

# Uncomment the line below and the parameter used in this block, when using Managed Identity auth
# Environment=AZURE_STORAGE_AUTH_TYPE=MSI
# If a MI endpoint is specified, this is the only parameter used, in the form of the Secret header. Only one of these three parameters are needed if multiple identities are present on the system.
# Environment=AZURE_STORAGE_IDENTITY_CLIENT_ID=<value>
# Only one of these three parameters are needed if multiple identities are present on the system.
# Environment=AZURE_STORAGE_IDENTITY_OBJECT_ID=<value>
# Only one of these three parameters are needed if multiple identities are present on the system.
# Environment=AZURE_STORAGE_IDENTITY_RESOURCE_ID=<value>
# Specifies a custom managed identity endpoint, as IMDS may not be available under some scenarios. Uses the AZURE_STORAGE_IDENTITY_CLIENT_ID parameter as the Secret header.
# Environment=AZURE_STORAGE_MANAGED_IDENTITY_ENDPOINT=<value>

# Under the hood
Environment=attr_timeout=240
Environment=entry_timeout=240
Environment=negative_timeout=120
Type=forking
ExecStart=/usr/bin/blobfuse ${BlobMountingPoint} --container-name=${ContainerName} --tmp-path=${BlobTmp} --use-https=${BlobUseHttps} --file-cache-timeout-in-seconds=${BlobFileCacheTimeOutInSeconds} --log-level=${BlobLogLevel} --use-attr-cache=${BlobUseAttrCache} -o attr_timeout=${attr_timeout} -o entry_timeout=${entry_timeout} -o negative_timeout=${negative_timeout} -o allow_other
ExecStop=/usr/bin/fusermount -u ${BlobMountingPoint}

[Install]
WantedBy=multi-user.target
