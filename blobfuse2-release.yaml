parameters:
  - name: tag
    displayName: 'New Release Tag'
    type: string
    default: 'blobfuse2-'
  
  - name: unit_test
    displayName: 'Execute Unit Tests'
    type: boolean
    default: false

  - name: post_release
    displayName: 'Post Release on Github'
    type: boolean
    default: false

  - name: publish_artifacts
    displayName: 'Publish Artifacts to Linux Repos'
    type: boolean
    default: false

  - name: draft
    displayName: 'Post as Draft Release'
    type: boolean
    default: false

  - name: prerelease
    displayName: 'Post as PreRelease'
    type: boolean
    default: false

  - name: update_version
    displayName: 'Update Version'
    type: boolean
    default: false

# Do not trigger this pipeline automatically
trigger: none
pr: none

resources:
  repositories:
  - repository: 1esPipelines
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  # The pipeline extends the 1ES PT which will inject different SDL and compliance tasks.
  # For non-production pipelines, use "Unofficial" as defined below.
  # For productions pipelines, use "Official".
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    # The SDL Source analysis stage can only run in a windows environment due to limitations of Guardian tools. 
    # If you use Linux pool, we require an additional windows image in your pool to run the source analysis.
    sdl:   
      sourceAnalysisPool:
        name: blobfuse2-pool  # Name of your hosted pool
        image: windows2022-1espt
        os: windows  # OS of the image. Allowed values: windows, linux, macOS

    stages:
    - stage: Stage
      jobs:
      - job: HostJob
        # If the pipeline publishes artifacts, use `templateContext` to define the artifacts.
        # This will enable 1ES PT to run SDL analysis tools on the artifacts and then upload them.
        templateContext:
          outputs:
          - output: pipelineArtifact
            targetPath: $(System.DefaultWorkingDirectory)/Samples
            artifactName: artifactName
        # Define the steps that the pipeline will run.
        # In most cases, copy and paste the steps from the original pipeline.
        steps:
        - powershell: echo "Hello World from host"
    # stages:
    #   - stage: BuildArtifacts
    #     jobs:
    #       - job: Set_1
    #         timeoutInMinutes: 120
    #         pool:
    #           name: blobfuse2-pool
    #           image: ubuntu22-1espt
    #           os: linux
    #         templateContext:
    #           outputs:
    #             - output: pipelineArtifact
    #               targetPath: $(System.DefaultWorkingDirectory)/blobfuse2-temp
    #               artifactName: 'blobfuse2-temp'
    #               displayName: 'Publish Artifacts'
    #         strategy:
    #             matrix:
    #               Libfuse3:
    #                 vmImage: 'ubuntu-22.04'
    #                 fuselib: 'libfuse3-dev'
    #                 tags: 'fuse3'
    #                 depends: 'fuse3'
    #                 container: 'test-cnt-ubn-22'
    #                 AgentName: "blobfuse-ubuntu22"

    #         variables:
    #           - group: NightlyBlobFuse
    #           - name: root_dir
    #             value: '$(System.DefaultWorkingDirectory)'
    #           - name: work_dir
    #             value: '$(System.DefaultWorkingDirectory)/azure-storage-fuse'
              
    #         steps:
    #           - checkout: none
    #           - script: |
    #               git clone https://github.com/Azure/azure-storage-fuse
    #             displayName: 'Checkout Code'
    #             workingDirectory: $(root_dir)
              
    #           # list commits from past 12hrs
    #           - script: |
    #               git checkout `echo $(Build.SourceBranch) | cut -d "/" -f 1,2 --complement`
    #               git --no-pager log --since="12 hours ago" --stat
    #             displayName: 'List Commits'
    #             workingDirectory: $(work_dir)
              
    #           # install dependencies required for compiling blobfuse
    #           - script: |
    #               sudo apt-get update --fix-missing
    #               sudo apt-get install ruby-dev build-essential pkg-config cmake gcc g++ rpm $(fuselib) -y
    #               sudo gem install dotenv -v 2.8.1
    #               sudo gem install fpm -V
    #             displayName: "Installing Dependencies"

    #           # get glibc version with which build is done
    #           - script: |
    #               ldd --version
    #             displayName: "GLIBC Version"

    #           # build blobfuse2 and generate binary
    #           - template: 'azure-pipeline-templates/build-release.yml'
    #             parameters:
    #               work_dir: $(work_dir)
    #               root_dir: $(root_dir)
    #               unit_test: ${{ parameters.unit_test }}
    #               tags: $(tags)
    #               container: $(container)

    #           # place the generated binary files & any additional files in appropriate locations
    #           - script: |
    #               mkdir -p pkgDir/usr/bin/
    #               mkdir -p pkgDir/usr/share/blobfuse2/
    #               cp azure-storage-fuse/blobfuse2 pkgDir/usr/bin/blobfuse2
    #               cp azure-storage-fuse/bfusemon pkgDir/usr/bin/bfusemon
    #               cp azure-storage-fuse/setup/baseConfig.yaml pkgDir/usr/share/blobfuse2/
    #               cp azure-storage-fuse/sampleFileCacheConfig.yaml pkgDir/usr/share/blobfuse2/
    #               cp azure-storage-fuse/sampleStreamingConfig.yaml pkgDir/usr/share/blobfuse2/
    #               mkdir -p pkgDir/etc/rsyslog.d
    #               mkdir -p pkgDir/etc/logrotate.d
    #               cp azure-storage-fuse/setup/11-blobfuse2.conf pkgDir/etc/rsyslog.d
    #               cp azure-storage-fuse/setup/blobfuse2-logrotate pkgDir/etc/logrotate.d/blobfuse2
    #             workingDirectory: $(root_dir)
    #             displayName: 'Accumulate pkg files'
              
    #           # using fpm tool for packaging of our binary & performing post-install operations
    #           # for additional information about fpm refer https://fpm.readthedocs.io/en/v1.13.1/
    #           - script: |
    #               fpm -s dir -t deb -n blobfuse2 -C pkgDir/ -v `./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3` -d $(depends) \
    #               --maintainer "Blobfuse v-Team <blobfusevteam@microsoft.com>" --url "https://github.com/Azure/azure-storage-fuse" \
    #               --description "An user-space filesystem for interacting with Azure Storage" 
    #               mv ./blobfuse2*.deb ./blobfuse2-`./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3`-$(tags).x86_64.deb
    #               cp ./blobfuse2*.deb $(Build.ArtifactStagingDirectory)
    #             workingDirectory: $(root_dir)
    #             displayName: 'Make deb Package'

    #           - script: |
    #               fpm -s dir -t rpm -n blobfuse2 --rpm-digest sha256 -C pkgDir/ -v `./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3` -d $(depends) \
    #               --maintainer "Blobfuse v-Team <blobfusevteam@microsoft.com>" --url "https://github.com/Azure/azure-storage-fuse" \
    #               --description "An user-space filesystem for interacting with Azure Storage" 
    #               mv ./blobfuse2*.rpm ./blobfuse2-`./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3`-$(tags).x86_64.rpm
    #               cp ./blobfuse2*.rpm $(Build.ArtifactStagingDirectory)
    #             workingDirectory: $(root_dir)
    #             displayName: 'Make rpm Package'
                
    #       - job: Set_2_ARM
    #         timeoutInMinutes: 120
    #         pool:
    #           name: blobfuse2-arm-pool
    #           image: ubuntu22arm-custom1espt
    #           os: linux
    #           hostArchitecture: Arm64
    #         templateContext:
    #           outputs:
    #             - output: pipelineArtifact
    #               targetPath: $(System.DefaultWorkingDirectory)/blobfuse2-temp
    #               artifactName: 'blobfuse2-temp'
    #               displayName: 'Publish Artifacts'
    #         strategy:
    #           matrix:
    #             Libfuse3:
    #               vmImage: 'ubuntu-22.04'
    #               fuselib: 'libfuse3-dev'
    #               tags: 'fuse3'
    #               depends: 'fuse3'
    #               container: 'test-cnt-ubn-22-arm64'
    #             AgentName: 'blobfuse-ubn22-arm64'

    #         variables:
    #           - group: NightlyBlobFuse
    #           - name: root_dir
    #             value: '$(System.DefaultWorkingDirectory)'
    #           - name: work_dir
    #             value: '$(System.DefaultWorkingDirectory)/azure-storage-fuse'
            
    #         steps:
    #           - checkout: none
    #           - script: |
    #               git clone https://github.com/Azure/azure-storage-fuse
    #             displayName: 'Checkout Code'
    #             workingDirectory: $(root_dir)
              
    #           # list commits from past 12hrs
    #           - script: |
    #               git checkout `echo $(Build.SourceBranch) | cut -d "/" -f 1,2 --complement`
    #               git --no-pager log --since="12 hours ago" --stat
    #             displayName: 'List Commits'
    #             workingDirectory: $(work_dir)
              
    #           # install dependencies required for compiling blobfuse
    #           - script: |
    #               sudo apt-get update --fix-missing
    #               sudo apt-get install ruby-dev build-essential pkg-config cmake gcc g++ rpm $(fuselib) -y
    #               sudo gem install fpm -V
    #             displayName: "Installing Dependencies"

    #           # get glibc version with which build is done
    #           - script: |
    #               ldd --version
    #             displayName: "GLIBC Version"

    #           # build blobfuse2 and generate binary
    #           - template: 'azure-pipeline-templates/build-release.yml'
    #             parameters:
    #               work_dir: $(work_dir)
    #               root_dir: $(root_dir)
    #               unit_test: ${{ parameters.unit_test }}
    #               tags: $(tags)
    #               container: $(container)

    #           # place the generated binary files & any additional files in appropriate locations
    #           - script: |
    #               mkdir -p pkgDir/usr/bin/
    #               mkdir -p pkgDir/usr/share/blobfuse2/
    #               cp azure-storage-fuse/blobfuse2 pkgDir/usr/bin/blobfuse2
    #               cp azure-storage-fuse/bfusemon pkgDir/usr/bin/bfusemon
    #               cp azure-storage-fuse/setup/baseConfig.yaml pkgDir/usr/share/blobfuse2/
    #               cp azure-storage-fuse/sampleFileCacheConfig.yaml pkgDir/usr/share/blobfuse2/
    #               cp azure-storage-fuse/sampleStreamingConfig.yaml pkgDir/usr/share/blobfuse2/
    #               mkdir -p pkgDir/etc/rsyslog.d
    #               mkdir -p pkgDir/etc/logrotate.d
    #               cp azure-storage-fuse/setup/11-blobfuse2.conf pkgDir/etc/rsyslog.d
    #               cp azure-storage-fuse/setup/blobfuse2-logrotate pkgDir/etc/logrotate.d/blobfuse2
    #             workingDirectory: $(root_dir)
    #             displayName: 'Accumulate pkg files'
              
    #           # using fpm tool for packaging of our binary & performing post-install operations
    #           # for additional information about fpm refer https://fpm.readthedocs.io/en/v1.13.1/
    #           - script: |
    #               fpm -s dir -t deb -n blobfuse2 -C pkgDir/ -v `./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3` -d $(depends) \
    #               --maintainer "Blobfuse v-Team <blobfusevteam@microsoft.com>" --url "https://github.com/Azure/azure-storage-fuse" \
    #               --description "An user-space filesystem for interacting with Azure Storage" 
    #               mv ./blobfuse2*.deb ./blobfuse2-`./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3`-$(tags).arm64.deb
    #               cp ./blobfuse2*.deb $(Build.ArtifactStagingDirectory)
    #             workingDirectory: $(root_dir)
    #             displayName: 'Make deb Package'

    #           - script: |
    #               fpm -s dir -t rpm -n blobfuse2 --rpm-digest sha256 -C pkgDir/ -v `./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3` -d $(depends) \
    #               --maintainer "Blobfuse v-Team <blobfusevteam@microsoft.com>" --url "https://github.com/Azure/azure-storage-fuse" \
    #               --description "An user-space filesystem for interacting with Azure Storage" 
    #               mv ./blobfuse2*.rpm ./blobfuse2-`./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3`-$(tags).aarch64.rpm
    #               cp ./blobfuse2*.rpm $(Build.ArtifactStagingDirectory)
    #             workingDirectory: $(root_dir)
    #             displayName: 'Make rpm Package'
            
    # # BuildArtifacts end here
