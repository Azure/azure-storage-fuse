name: BlobFuse CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 180

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04]

    env:
        MOUNT_DIR: /home/runner/work/blob_mnt
        TEMP_DIR: /home/blobfusetmp
        
        BLOBFUSE_CFG: /home/runner/work/blobfuse.cfg
        AZURE_STORAGE_ACCOUNT: ${{ secrets.STO_ACC_TEST1 }}
        AZURE_STORAGE_ACCESS_KEY: ${{ secrets.STO_KEY_TEST1 }}

    steps:
    - uses: actions/checkout@v2
           
    - name: Install basic packages
      run: sudo apt-get install pkg-config cmake libcurl4-gnutls-dev libgnutls28-dev uuid-dev libgcrypt20-dev libboost-all-dev gcc g++ -y
    
    - name: Install libfuse
      run: sudo apt-get install libfuse-dev -y
    #- name: Install golang
    #  run: sudo apt install golang-go
        
    # Start building the blobfuse code
    - name: Prepare for build
      run: chmod +x build.sh
    - name: Bulid blobFuse
      run: ./build.sh
    
    # Validate binary was built successfully
    - name: Print current directory
      run: pwd
    - name: Test Version
      run: ./build/blobfuse --version
      
    # Initialize logging for blobfuse
    - name: Copy the syslog filter file
      run: sudo cp ./systemd/10-blobfuse.conf /etc/rsyslog.d/
      continue-on-error: true
      
    - name: Copy logrotate config file
      run: sudo cp ./systemd/blobfuse-logrotate /etc/logrotate.d/blobfuse
      continue-on-error: true
      
    - name: Restart rsyslogd service
      run: sudo service rsyslog restart
      continue-on-error: true
      
    # Create directory structures for the basic testing
    - name: Prepare for test
      run: echo "Creating Mount dir " $MOUNT_DIR
    - name: Create Mount Directory
      run:  mkdir $MOUNT_DIR
    - name: Create Cache Directory
      run: sudo mkdir $TEMP_DIR    
       
    # Set container name based on OS
    - name: Prepare contianer name
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-16.04" ]; then
          echo "Setting container for Ubn-16"
          echo "::set-env name=CONT_NAME::${{ secrets.STO_CONT_NAME_UBN_16 }}"
        fi
        if [ "${{ matrix.os }}" = "ubuntu-18.04" ]; then
          echo "Setting container for Ubn-18"
          echo "::set-env name=CONT_NAME::${{ secrets.STO_CONT_NAME_UBN_18 }}"
        fi
       
    # Create config file for the load
    - name: Create config file
      run: |
        echo "accountName " ${{ env.AZURE_STORAGE_ACCOUNT }} > $BLOBFUSE_CFG
        echo "accountKey " ${{ env.AZURE_STORAGE_ACCESS_KEY }} >> $BLOBFUSE_CFG
        echo "authType Key" >> $BLOBFUSE_CFG
        echo "containerName " $CONT_NAME >> $BLOBFUSE_CFG
        cat $BLOBFUSE_CFG
        
    # Mount container using blobFuse
    - name: Mount container
      run: |
        sudo ./build/blobfuse $MOUNT_DIR --tmp-path=$TEMP_DIR --config-file=$BLOBFUSE_CFG --container-name=$CONT_NAME -o allow_other --log-level=LOG_DEBUG

    # Give some time for system to stablise
    - name: Let the mount come online
      run: sleep 10s
      

    # Initial clean up of containers

    # Check the mount went through or not by listing the mounted directory
    - name: TEST - Directory Listing
      run: ls -lRt $MOUNT_DIR
      timeout-minutes: 5
      #continue-on-error: true

    # Directory deletion is not working so commenting this out
    # Clear directory form previous failed runs
    #- name: TEST - Directory Cleaning before Begin
    #  run: rm -rf $MOUNT_DIR/*
    #  timeout-minutes: 10
      #continue-on-error: true
             
    # Directory Operation Testing

    # Create a directory in mounted directory
    #- name: TEST - Create Directory
    #  run: mkdir $MOUNT_DIR/test_dir
    #  timeout-minutes: 5
    #  continue-on-error: true
    
    # GetStat on Directory
    #- name: TEST - GetStat Directory
    #  run: stat $MOUNT_DIR/test_dir
    #  timeout-minutes: 3
    #  #continue-on-error: true
        
    # Delete newly created Directory
    #- name: TEST - Delete Directory
    #  run: rm -rf  $MOUNT_DIR/test_dir
    #  timeout-minutes: 5
    #  continue-on-error: true

    # File Operations Testing

    # Create a file in mounted directory
    - name: TEST - Create File (1GB in size)
      run: dd bs=1000 count=1000000 if=/dev/zero of=$MOUNT_DIR/test.txt
      timeout-minutes: 60
      #continue-on-error: true
     
    # GetStat on File
    - name: TEST - GetStat File
      run: stat $MOUNT_DIR/test.txt
      timeout-minutes: 3
      #continue-on-error: true

    # File Read-Write test
    - name: TEST - Write to file and Read back
      run: |
        sudo cat /var/log/*.log > $MOUNT_DIR/test.log
        cat $MOUNT_DIR/test.log
        stat $MOUNT_DIR/test.log
      timeout-minutes: 20
      continue-on-error: true
    # File rename test
    - name: TEST - File Rename 
      run: |
        mv $MOUNT_DIR/test.txt $MOUNT_DIR/test1.txt
      timeout-minutes: 5

    # Delete newly created file
    - name: TEST - Delete File
      run: | 
        rm -rf  $MOUNT_DIR/test.txt
        rm -rf  $MOUNT_DIR/test1.txt
        rm -rf  $MOUNT_DIR/test.log
      timeout-minutes: 20
      #continue-on-error: true

    # File copy test
    - name: TEST - File Copy 
      run: |
        sudo cp /var/log/*.* $MOUNT_DIR/
      timeout-minutes: 10
  
    # Clear directory 
    - name: TEST - Directory Cleaning at End
      run: rm -rf $MOUNT_DIR/*
      timeout-minutes: 10
      #continue-on-error: true


    # Basic testing done.....
    
    # Test complete so now unmount the directory
    - name: Unmount container
      run:  sudo fusermount -u $MOUNT_DIR
      timeout-minutes: 20
      continue-on-error: true
    
    # Print the log files
    - name: Print the log file
      run: cat /var/log/blobfuse.log
      continue-on-error: true
    
        
    
