name: BlobFuse CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        MOUNT_DIR: /home/runner/work/blob_mnt
        TEMP_DIR: /home/blobfusetmp
        CONT_NAME: ${{ secrets.STO_CONT_NAME }}
        BLOBFUSE_CFG: /home/runner/work/blobfuse.cfg
        
    steps:
    - uses: actions/checkout@v2
    - name: Install basic packages
      run: sudo apt-get install pkg-config cmake libcurl4-gnutls-dev libgnutls28-dev uuid-dev libgcrypt20-dev libboost-all-dev gcc g++ -y
    
    - name: Install libfuse
      run: sudo apt-get install libfuse-dev -y
    #- name: Install golang
    #  run: sudo apt install golang-go
    
    # Start building the blobfuse code
    - name: Prepare for build
      run: chmod +x build.sh
    - name: Bulid blobFuse
      run: ./build.sh
    
    # Validate binary was built successfully
    - name: Print current directory
      run: pwd
    - name: Test Version
      run: ./build/blobfuse --version
      
    # Create directory structures for the basic testing
    - name: Prepare for test
      run: echo "Creating Mount dir " $MOUNT_DIR
    - name: Create Mount Directory
      run:  mkdir $MOUNT_DIR
    - name: Create Cache Directory
      run: sudo mkdir $TEMP_DIR
      
   
   # Initialize logging for blobfuse
    - name: Copy the syslog filter file
      run: cp ./systemd/10-blobfuse.conf /etc/rsyslog.d/
      continue-on-error: true
      
    - name: Copy logrotate config file
      run: sudo cp ./systemd/blobfuse-logrotate /etc/logrotate.d/blobfuse
      continue-on-error: true
      
    - name: Restart rsyslogd service
      run: sudo service rsyslog restart
      continue-on-error: true
    
    # Set the environment variables for the test
    - name: Set up Environment variables for the test
      run: |
        echo ::set-env name=AZURE_STORAGE_ACCOUNT::${{ secrets.STO_ACC_TEST1 }}
        echo ::set-env name=AZURE_STORAGE_ACCESS_KEY::${{ secrets.STO_KEY_TEST1 }}
        export AZURE_STORAGE_ACCOUNT=${{ secrets.STO_ACC_TEST1 }}
        export AZURE_STORAGE_ACCESS_KEY=${{ secrets.STO_KEY_TEST1 }}
    
   # Validate env variable
    - name: Validate Env variables
      run: |
       echo "Account name : " ${{ env.AZURE_STORAGE_ACCOUNT }}
       echo "Container name : " $CONT_NAME
      continue-on-error: true
        
    # Create config file for the load
    - name: Create config file
      run: |
        echo "accountName " ${{ env.AZURE_STORAGE_ACCOUNT }} > BLOBFUSE_CFG
        echo "accountKey " ${{ env.AZURE_STORAGE_ACCESS_KEY }} >> BLOBFUSE_CFG
        echo "authType Key" >> BLOBFUSE_CFG
        echo "containerName " $CONT_NAME >> BLOBFUSE_CFG
        
   # Validate the config file
    - name: Validate the config file
      run : cat BLOBFUSE_CFG
        
   # Mount container using blobFuse
    - name: Mount container
      run: |
        sudo ./build/blobfuse $MOUNT_DIR --tmp-path=$TEMP_DIR --config-file=$BLOBFUSE_CFG --container-name=$CONT_NAME -o allow_other --log-level=LOG_DEBUG
        
   # Check the mount went through or not by listing the mounted directory
    - name: Check directory listing
      run: ls -l $MOUNT_DIR
      continue-on-error: true
    
    # Test complete so now unmount the directory
    - name: Unmount container
      run:  fusermount -u $MOUNT_DIR
      continue-on-error: true
    
    # Print the log files
    - name: Print the log file
      run: cat /var/log/blobfuse.log
      continue-on-error: true
    
        
    
