name: Auto Comment Issue with AI

on:
  issues:
    types: [opened]
  discussion:
    types: [created]

jobs:
  ai-comment-on-issue:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write
      issues: write
      discussions: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        sudo apt-get install jq
        python -m pip install --upgrade pip
        pip install mcp httpx python-dotenv requests openai transformers torch

    - name: Run DeepWiki Query
      id: deepwiki-step
      env:
        # The repository to be queried by DeepWiki. Update this if needed.
        TARGET_REPO: "Azure/azure-storage-fuse"
        # Combine title and body to form a comprehensive question
        ISSUE_TITLE: $(jq -r '.issue.title // .discussion.title' "${{ github.event_path }}")
        ISSUE_BODY: $(jq -r '.issue.body // .discussion.body' "${{ github.event_path }}")
      run: |
        # Run the python script and capture its output to a file
        python .github/scripts/deepwiki_query.py "${{ env.TARGET_REPO }}" "${{ env.ISSUE_TITLE }}" "${{ env.ISSUE_BODY }}" > deepwiki_full_response.md

    - name: Print DeepWiki response
      run: cat deepwiki_full_response.md

    - name: Summarize DeepWiki Response with AI
      id: summarization-step
      run: |
        python .github/scripts/ai_summarize.py deepwiki_full_response.md response_comment.md

    - name: Print summarized response
      run: cat response_comment.md

    - name: Read comment body from file
      id: get-body
      run: echo "COMMENT_BODY=$(cat response_comment.md)" >> $GITHUB_ENV

    - name: Post Comment to Issue
      if: github.event_name == 'issues'
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.issue.number }}
        body-path: 'response_comment.md'
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Post Comment to Discussion
      if: github.event_name == 'discussion_comment' || github.event_name == 'discussion'
      uses: wesleyscholl/create-discussion-comment@v1.0.18
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        body: ${{ env.COMMENT_BODY }}
        discussion-id: ${{ github.event.discussion.id }}
        client-mutation-id: "unique-id-1234"


    # - name: Post Comment 
    #   uses: peter-evans/create-or-update-comment@v4
    #   with:
    #     issue-number: ${{ github.event.issue.number || github.event.discussion.number }}
    #     body-path: 'response_comment.md'
    #     token: ${{ secrets.GITHUB_TOKEN }}