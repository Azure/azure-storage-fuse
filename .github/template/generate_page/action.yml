name: generate_page
description: "Run perf-test and generate github pages"

inputs:
  TEST: 
    required: true
    description: "Test to run"
  GITHUB_TOKEN: 
    required: true
    description: "Token for github check-in"
  AZURE_STORAGE_ACCOUNT:
    required: true
    description: "Storage account name"
  AZURE_STORAGE_ACCOUNT_CONTAINER:
    required: true
    description: "Storage container name"
  AZURE_STORAGE_ACCESS_KEY: 
    required: true
    description: "Access key for the storage account"

runs:
  using: "composite"
  steps:
    # Pre-run cleanup
    - name: "Cleanup before test"
      shell: bash
      run: |
        rm -rf /mnt/blob_mnt/*
        rm -rf /mnt/tempcache/*

    # Run the benchmark script 
    - name: "Run Benchmark Script : ${{ inputs.TEST }}"
      shell: bash
      run: |
        ./perf_testing/scripts/fio_bench.sh /mnt/blob_mnt ${{ inputs.TEST }}
      env:
        AZURE_STORAGE_ACCOUNT:  ${{ inputs.AZURE_STORAGE_ACCOUNT }}
        AZURE_STORAGE_ACCOUNT_CONTAINER: ${{ inputs.AZURE_STORAGE_ACCOUNT_CONTAINER }}
        AZURE_STORAGE_ACCESS_KEY: ${{ inputs.AZURE_STORAGE_ACCESS_KEY }}
    
    # Print blobfuse2 logs
    - name: "Print logs : ${{ inputs.TEST }}"
      shell: bash
      run: cat ./blobfuse2.log
      if: always()

    # Print the results generated
    - name: "Print latest results : ${{ inputs.TEST }}"
      shell: bash
      run: |
        cat ./${{ inputs.TEST }}/bandwidth_results.json
        cat ./${{ inputs.TEST }}/latency_results.json
        cat ./${{ inputs.TEST }}/cpu_results.json
      if: ${{ !contains(inputs.TEST, 'list') }}    
    
    - name: "Print latest results : ${{ inputs.TEST }}"
      shell: bash
      run: |
        cat ./${{ inputs.TEST }}/list_results.json
      if: ${{ contains(inputs.TEST, 'list') }}    

    # Push the bandwidth results and publish the graphs
    - name: "Update Benchmark Results : ${{ inputs.TEST }}"
      uses: benchmark-action/github-action-benchmark@v1
      with:
        output-file-path: ${{ inputs.TEST }}/bandwidth_results.json
        tool: 'customBiggerIsBetter'
        alert-threshold: "160%"
        max-items-in-chart: 100
        github-token: ${{ inputs.GITHUB_TOKEN }}
        fail-on-alert: true
        auto-push: true
        comment-on-alert: true
        gh-pages-branch: benchmarks
        benchmark-data-dir-path: bandwidth/${{ inputs.TEST }}
      if: ${{ !contains(inputs.TEST, 'list') }}    

    # Push the latency results and publish the graphs
    - name: "Update Benchmark Results : ${{ inputs.TEST }}"
      uses: benchmark-action/github-action-benchmark@v1
      with:
        output-file-path: ${{ inputs.TEST }}/latency_results.json
        tool: 'customSmallerIsBetter'
        alert-threshold: "160%"
        max-items-in-chart: 100
        github-token: ${{ inputs.GITHUB_TOKEN }}
        fail-on-alert: true
        auto-push: true
        comment-on-alert: true
        gh-pages-branch: benchmarks
        benchmark-data-dir-path: latency/${{ inputs.TEST }}  
      if: ${{ !contains(inputs.TEST, 'list') }}    

    # Push the cpu results and publish the graphs
    - name: "Update Benchmark Results : ${{ inputs.TEST }}"
      uses: benchmark-action/github-action-benchmark@v1
      with:
        output-file-path: ${{ inputs.TEST }}/cpu_results.json
        tool: 'customSmallerIsBetter'
        alert-threshold: "160%"
        max-items-in-chart: 100
        github-token: ${{ inputs.GITHUB_TOKEN }}
        fail-on-alert: true
        auto-push: true
        comment-on-alert: true
        gh-pages-branch: benchmarks
        benchmark-data-dir-path: cpu/${{ inputs.TEST }}   
      if: ${{ !contains(inputs.TEST, 'list') }}    

    # Push the listing results and publish the graphs
    - name: "Update Benchmark Results : ${{ inputs.TEST }}"
      uses: benchmark-action/github-action-benchmark@v1
      with:
        output-file-path: ${{ inputs.TEST }}/list_results.json
        tool: 'customSmallerIsBetter'
        alert-threshold: "160%"
        max-items-in-chart: 100
        github-token: ${{ inputs.GITHUB_TOKEN }}
        fail-on-alert: true
        auto-push: true
        comment-on-alert: true
        gh-pages-branch: benchmarks
        benchmark-data-dir-path: time/${{ inputs.TEST }}   
      if: ${{ contains(inputs.TEST, 'list') }}    