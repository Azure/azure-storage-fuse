parameters:
  - name: tag
    displayName: 'New Release Tag'
    type: string
    default: 'blobfuse2-'
  
  - name: unit_test
    displayName: 'Execute Unit Tests'
    type: boolean
    default: false

  - name: post_release
    displayName: 'Post Release on Github'
    type: boolean
    default: false

  - name: draft
    displayName: 'Post as Draft Release'
    type: boolean
    default: false

  - name: prerelease
    displayName: 'Post as PreRelease'
    type: boolean
    default: false

  - name: update_version
    displayName: 'Update Version'
    type: boolean
    default: false

# Do not trigger this pipeline automatically
trigger: none
pr: none

stages:
  - stage: BuildArtifacts
    jobs:
      - job: Set_1
        strategy:
          matrix:
            Ubuntu-18:
              vmImage: 'ubuntu-18.04'
              fuselib: 'libfuse-dev'
              tags: 'fuse2'
              container: 'test-cnt-ubn-18'
            Ubuntu-20:
              vmImage: 'ubuntu-20.04'
              fuselib: 'libfuse3-dev'
              tags: 'fuse3'
              container: 'test-cnt-ubn-20'
        
        pool:
          vmImage: $(vmImage)

        variables:
          - group: NightlyBlobFuse
          - name: root_dir
            value: '$(System.DefaultWorkingDirectory)'
          - name: work_dir
            value: '$(System.DefaultWorkingDirectory)/azure-storage-fuse'
        
        steps:
          - checkout: none
          - script: |
              git clone https://github.com/Azure/azure-storage-fuse
            displayName: 'Checkout Code'
            workingDirectory: $(root_dir)
          
          # list commits from past 12hrs
          - script: |
              git checkout `echo $(Build.SourceBranch) | cut -d "/" -f 1,2 --complement`
              git --no-pager log --since="12 hours ago" --stat
            displayName: 'List Commits'
            workingDirectory: $(work_dir)
          
          # install dependencies required for compiling blobfuse
          - script: |
              sudo apt-get update --fix-missing
              sudo apt-get install ruby-dev build-essential $(fuselib) -y
              sudo gem install fpm -V
            displayName: "Installing Dependencies"

          # build blobfuse2 and generate binary
          - template: 'azure-pipeline-templates/build-release.yml'
            parameters:
              work_dir: $(work_dir)
              root_dir: $(root_dir)
              unit_test: ${{ parameters.unit_test }}
              tags: $(tags)
              container: $(container)

          # place the generated binary files & any additional files in appropriate locations
          - script: |
              mkdir -p pkgDir/usr/bin/
              mkdir -p pkgDir/usr/share/blobfuse2/
              cp azure-storage-fuse/blobfuse2 pkgDir/usr/bin/blobfuse2
              cp azure-storage-fuse/setup/baseConfig.yaml pkgDir/usr/share/blobfuse2/
              cp azure-storage-fuse/sampleFileCacheConfig.yaml pkgDir/usr/share/blobfuse2/
              cp azure-storage-fuse/sampleStreamingConfig.yaml pkgDir/usr/share/blobfuse2/
              cp azure-storage-fuse/tools/postinstall.sh pkgDir/usr/share/blobfuse2/
              mkdir -p pkgDir/etc/rsyslog.d
              mkdir -p pkgDir/etc/logrotate.d
              cp azure-storage-fuse/setup/11-blobfuse2.conf pkgDir/etc/rsyslog.d
              cp azure-storage-fuse/setup/blobfuse2-logrotate pkgDir/etc/logrotate.d/blobfuse2
            workingDirectory: $(root_dir)
            displayName: 'Accumulate pkg files'
          
          # using fpm tool for packaging of our binary & performing post-install operations
          # for additional information about fpm refer https://fpm.readthedocs.io/en/v1.13.1/
          - script: |
              fpm -s dir -t deb -n blobfuse2 -C pkgDir/ -v `./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3` -d fuse \
              --maintainer "Blobfuse v-Team <blobfusevteam@microsoft.com>" --url "https://github.com/Azure/azure-storage-fuse" \
              --description "An user-space filesystem for interacting with Azure Storage" 
              mv ./blobfuse2*.deb ./blobfuse2-`./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3`-$(tags)-x86-64.deb
              cp ./blobfuse2*.deb $(Build.ArtifactStagingDirectory)
            workingDirectory: $(root_dir)
            displayName: 'Make deb Package'

          - script: |
              fpm -s dir -t rpm -n blobfuse2 -C pkgDir/ -v `./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3` -d fuse \
              --maintainer "Blobfuse v-Team <blobfusevteam@microsoft.com>" --url "https://github.com/Azure/azure-storage-fuse" \
              --description "An user-space filesystem for interacting with Azure Storage" 
              mv ./blobfuse2*.rpm ./blobfuse2-`./pkgDir/usr/bin/blobfuse2 --version | cut -d " " -f 3`-$(tags)-x86-64.rpm
              cp ./blobfuse2*.rpm $(Build.ArtifactStagingDirectory)
            workingDirectory: $(root_dir)
            displayName: 'Make rpm Package'
          
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: 'blobfuse2-temp'
            displayName: 'Publish Artifacts' 
  # BuildArtifacts end here

  - stage: TestArtifacts
    dependsOn: BuildArtifacts
    condition: succeeded('BuildArtifacts')
    jobs:
      - job: Set_1
        strategy:
          matrix:
            Ubuntu-18:
              agentName: "blobfuse-ubuntu18"
              vmImage: 'ubuntu-18.04'
              fuselib: 'libfuse-dev'
              fuse-version: 'fuse'
              tags: 'fuse2'
              container: 'test-cnt-ubn-18'
            Ubuntu-20:
              agentName: "blobfuse-ubuntu20"
              vmImage: 'ubuntu-20.04'
              fuse-version: 'fuse3'
              fuselib: 'libfuse3-dev'
              tags: 'fuse3'
              container: 'test-cnt-ubn-20'
        
        pool:
          name: "blobfuse-ubuntu-pool"
          demands:
            - ImageOverride -equals $(agentName)

        variables:
          - group: NightlyBlobFuse
          - name: root_dir
            value: '$(System.DefaultWorkingDirectory)'
          - name: work_dir
            value: '$(System.DefaultWorkingDirectory)/azure-storage-fuse'
          - name: mount_dir
            value: '$(System.DefaultWorkingDirectory)/fusetmp'
          - name: temp_dir
            value: '$(System.DefaultWorkingDirectory)/fusetmpcache'

        
        steps:
          - checkout: none

          - task: GoTool@0
            inputs:
              version: '1.16.2'
            displayName: "GoTool Setup"

          - script: |
              git clone https://github.com/Azure/azure-storage-fuse
            displayName: 'Checkout Code'
            workingDirectory: $(root_dir)

          - script: |
              git checkout `echo $(Build.SourceBranch) | cut -d "/" -f 1,2 --complement`
            displayName: 'Checkout Branch'
            workingDirectory: $(root_dir)/azure-storage-fuse

          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: 'blobfuse2-temp'
              downloadPath: $(root_dir)
              itemPattern: blobfuse2-temp/blobfuse2*$(tags)*.deb

          - script: |
              for f in ./blobfuse2*$(tags)*.deb; do mv -v "$f" "${f/-$(tags)-/-$(vmImage)-}"; done;
              cp ./blobfuse2*$(vmImage)*.deb $(Build.ArtifactStagingDirectory)
            displayName: 'Rename Package'
            workingDirectory: $(root_dir)/blobfuse2-temp

          - script: |
              sudo dpkg --info blobfuse2*.deb
              sudo dpkg -i blobfuse2*.deb
              sudo apt-get install $(fuse-version) build-essential -y
            displayName: 'Install Package'
            workingDirectory: $(Build.ArtifactStagingDirectory)

          - script: |
              blobfuse2 version
            displayName: 'Check Version'

          - script: |
              blobfuse2 --help
            displayName: 'Check Help'

          - script: |
              mkdir -p $(mount_dir)
              mkdir -p $(temp_dir)
            displayName: 'Prepare Blobfuse Directories'
            workingDirectory: $(root_dir)

          - script: |
              blobfuse2 gen-test-config --config-file=$(root_dir)/azure-storage-fuse/testdata/config/azure_key.yaml --container-name=$(container) --temp-path=$(temp_dir) --output-file=$(root_dir)/block_blob_config.yaml
            displayName: 'Create Blob Config File'
            workingDirectory: $(root_dir)
            env:
              NIGHTLY_STO_ACC_NAME: $(NIGHTLY_STO_BLOB_ACC_NAME)
              NIGHTLY_STO_ACC_KEY: $(NIGHTLY_STO_BLOB_ACC_KEY)
              ACCOUNT_TYPE: 'block'
              ACCOUNT_ENDPOINT: 'https://$(NIGHTLY_STO_BLOB_ACC_NAME).blob.core.windows.net'
              VERBOSE_LOG: true
            continueOnError: false

          - script: |
              cat block_blob_config.yaml
            workingDirectory: $(root_dir)
            displayName: 'Print Block Blob Config File'

          - script: |
              blobfuse2 mount $(mount_dir) --config-file=$(root_dir)/block_blob_config.yaml
            workingDirectory: $(root_dir)
            displayName: 'Mount Block Blob'
            
            # Wait for some time to let the container come up
          - script: |
              sleep 10s
            displayName: 'Waiting for Mount'

          - script: |
              df
              echo "-------------------------------------------------------------------"
              df | grep blobfuse2
              exit $?
            displayName: 'Verify Mount'

          - task: Go@0
            inputs:
              command: 'test'
              arguments: '-v -timeout=2h ./... -args -mnt-path=$(mount_dir) -adls=false -clone=true -tmp-path=$(temp_dir) -quick-test=true -distro-name="$(vmImage)"'
              workingDirectory: $(work_dir)/test/e2e_tests
            displayName: 'E2E Test: Block Blob'
            timeoutInMinutes: 120
            continueOnError: false

          - script: |
              blobfuse2 unmount $(mount_dir)
            workingDirectory: $(root_dir)
            displayName: 'Unmount Blob'

          - script: |
              cat blobfuse2-logs.txt
            displayName: 'View Logs'
            workingDirectory: $(root_dir)
            condition: always()

          - script: |
              > blobfuse2-logs.txt
            displayName: 'Clear Logs'
            workingDirectory: $(root_dir)
            condition: always()

          - script: |
              blobfuse2 gen-test-config --config-file=$(root_dir)/azure-storage-fuse/testdata/config/azure_key.yaml --container-name=$(container) --temp-path=$(root_dir)/fusetmpcache --output-file=$(root_dir)/adls_config.yaml
            displayName: 'Create ADLS Config File'
            workingDirectory: $(root_dir)
            env:
              NIGHTLY_STO_ACC_NAME: $(AZTEST_ADLS_ACC_NAME)
              NIGHTLY_STO_ACC_KEY: $(AZTEST_ADLS_KEY)
              ACCOUNT_TYPE: 'adls'
              ACCOUNT_ENDPOINT: 'https://$(AZTEST_ADLS_ACC_NAME).dfs.core.windows.net'              
              VERBOSE_LOG: true
            continueOnError: false

          - script: |
              cat adls_config.yaml
            workingDirectory: $(root_dir)
            displayName: 'Print ADLS Config File'

          # publishing the artifacts generated
          - task: PublishBuildArtifacts@1
            inputs:
              artifactName: 'blobfuse2'
            displayName: 'Publish Artifacts' 