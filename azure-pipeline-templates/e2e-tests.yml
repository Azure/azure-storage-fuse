parameters:
  - name: working_dir
    type: string
  - name: mount_dir
    type: string
  - name: temp_dir
    type: string
  - name: idstring
    type: string
  - name: distro_name
    type: string
  - name: mountStep
    type: step
  - name: adls
    type: boolean
  - name: clone
    type: boolean
    default: "false"

steps:

  # Mount the container
  - template: 'mount.yml'
    parameters:
      working_dir: ${{ parameters.working_dir }}
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}
      prefix: ${{ parameters.idstring }}
      mountStep: ${{ parameters.mountStep }}

  # Run End to End test
  # Check blobfuse2 is mounted or not    
  - script: |
      df
      echo "-------------------------------------------------------------------"
      df | grep blobfuse2
      exit $?
    displayName: 'Verify Mount'

  - task: Go@0
    inputs:
      command: 'test'
      arguments: '-v -timeout=2h ./... -args -mnt-path=${{ parameters.mount_dir }} -adls=${{parameters.adls}} -clone=${{parameters.clone}} -tmp-path=${{parameters.temp_dir}} -quick-test=false'
      workingDirectory: ${{ parameters.working_dir }}/test/e2e_tests
    displayName: 'E2E Test: ${{ parameters.idstring }}'
    timeoutInMinutes: 120
    continueOnError: false
    condition: or(eq(variables.distro_name, 'ubuntu-18.04'), eq(variables.distro_name, 'ubuntu-20.04'))
    env:
      mount_dir: ${{ parameters.mount_dir }}

  - task: Go@0
    inputs:
      command: 'test'
      arguments: '-v -timeout=2h ./... -args -mnt-path=${{ parameters.mount_dir }} -adls=${{parameters.adls}} -clone=${{parameters.clone}} -tmp-path=${{parameters.temp_dir}} -quick-test=true'
      workingDirectory: ${{ parameters.working_dir }}/test/e2e_tests
    displayName: 'E2E Test: ${{ parameters.idstring }}'
    timeoutInMinutes: 120
    continueOnError: false
    condition: and(ne(variables.distro_name, 'ubuntu-18.04'), ne(variables.distro_name, 'ubuntu-20.04'))
    env:
      mount_dir: ${{ parameters.mount_dir }}

  - script: |
      cat blobfuse2-logs.txt
    displayName: 'View Logs'
    condition: always()

  - script: |
      > blobfuse2-logs.txt
    displayName: 'Clear Logs'
    condition: always()