parameters:
  - name: conf_template
    type: string
  - name: config_file
    type: string
  - name: container
    type: string
  - name: temp_dir
    type: string
  - name: mount_dir
    type: string    
  - name: idstring
    type: string
  - name: adls
    type: boolean
  - name: account_name
    type: string
  - name: account_key
    type: string
  - name: account_type
    type: string
  - name: account_endpoint
  - name: distro_name
    type: string
  - name: quick_test
    type: boolean
    default: true
  - name: mnt_flags
    type: string
    default: ""
  - name: verbose_log
    type: boolean
    default: false
  - name: clone
    type: boolean
    default: false

steps:    
  - script: |
      $(WORK_DIR)/blobfuse2 gen-test-config --config-file=$(WORK_DIR)/testdata/config/azure_key.yaml --container-name=${{ parameters.container }} --temp-path=${{ parameters.temp_dir }} --output-file=${{ parameters.config_file }}
    displayName: 'Create Config File for RW mount'
    env:
      NIGHTLY_STO_ACC_NAME: ${{ parameters.account_name }}
      NIGHTLY_STO_ACC_KEY: ${{ parameters.account_key }}
      ACCOUNT_TYPE: ${{ parameters.account_type }}
      ACCOUNT_ENDPOINT: ${{ parameters.account_endpoint }}
      VERBOSE_LOG: ${{ parameters.verbose_log }}
    continueOnError: false

  - script:
      cat ${{ parameters.config_file }}
    displayName: 'Print config file'

  # run below step only if direct_io is false
  - template: 'mount.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}
      prefix: ${{ parameters.idstring }}
      mountStep: 
        script: |
          $(WORK_DIR)/blobfuse2 mount ${{ parameters.mount_dir }} --config-file=${{ parameters.config_file }} --default-working-dir=$(WORK_DIR) --file-cache-timeout=3200  ${{ parameters.mnt_flags }}

  - script: |
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200,1024,2048,4096}; do echo $i; done | parallel --will-cite -j 5 'head -c {}M < /dev/urandom > ${{ parameters.mount_dir }}/myfile_{}'
      ls -lh ${{ parameters.mount_dir }}/myfile_*
    displayName: 'Generate data'

  - script: |
      md5sum ${{ parameters.mount_dir }}/myfile_* > $(WORK_DIR)/md5sum_file_cache.txt
    displayName: 'Generate md5Sum with File-Cache'

  - script: |
      $(WORK_DIR)/blobfuse2 unmount all
    displayName: 'Unmount RW mount'

  - script: |
      $(WORK_DIR)/blobfuse2 gen-test-config --config-file=$(WORK_DIR)/testdata/config/azure_key_bc.yaml --container-name=${{ parameters.container }} --temp-path=${{ parameters.temp_dir }} --output-file=${{ parameters.config_file }}
    displayName: 'Create Config File for RO mount'
    env:
      NIGHTLY_STO_ACC_NAME: ${{ parameters.account_name }}
      NIGHTLY_STO_ACC_KEY: ${{ parameters.account_key }}
      ACCOUNT_TYPE: ${{ parameters.account_type }}
      ACCOUNT_ENDPOINT: ${{ parameters.account_endpoint }}
      VERBOSE_LOG: ${{ parameters.verbose_log }}
    continueOnError: false


  - script:
      cat ${{ parameters.config_file }}
    displayName: 'Print block cache config file'   

  - template: 'mount.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}
      prefix: ${{ parameters.idstring }}
      ro_mount: true
      mountStep: 
        script: |
          $(WORK_DIR)/blobfuse2 mount ${{ parameters.mount_dir }} --config-file=${{ parameters.config_file }} --default-working-dir=$(WORK_DIR) -o ro ${{ parameters.mnt_flags }}

  - script: |
      md5sum ${{ parameters.mount_dir }}/myfile_* > $(WORK_DIR)/md5sum_block_cache.txt
    displayName: 'Generate md5Sum with Block-Cache'

  - script: |
      $(WORK_DIR)/blobfuse2 unmount all
    displayName: 'Unmount RO mount'

  - script: |
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_block_cache.txt
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_file_cache.txt
      echo "----------------------------------------------"
      diff $(WORK_DIR)/md5sum_block_cache.txt $(WORK_DIR)/md5sum_file_cache.txt
      if [ $? -ne 0 ]; then
        exit 1
      fi
    displayName: 'Compare md5Sum'

  - template: 'mount.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}
      prefix: ${{ parameters.idstring }}
      ro_mount: true
      mountStep: 
        script: |
          $(WORK_DIR)/blobfuse2 mount ${{ parameters.mount_dir }} --config-file=${{ parameters.config_file }} --default-working-dir=$(WORK_DIR) ${{ parameters.mnt_flags }}

  - script: |
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200,1024,2048,4096}; do echo $i; done | parallel --will-cite -j 5 'cp ${{ parameters.mount_dir }}/myfile_{} ${{ parameters.mount_dir }}/myfileCopy_{}'
      md5sum ${{ parameters.mount_dir }}/myfileCopy_* > $(WORK_DIR)/md5sum_block_cache_write.txt
      ls -lh ${{ parameters.mount_dir }}/myfile*
    displayName: 'Copy files using block-cache'

  - script: |
      rm -rf ${{ parameters.mount_dir }}/myfile*
    displayName: 'Clear files using block-cache'

  - script: |
      $(WORK_DIR)/blobfuse2 unmount all
    displayName: 'Unmount RW mount'

  - script: |
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_block_cache_write.txt
      cat $(WORK_DIR)/md5sum_block_cache_write.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_block_cache_write.txt1
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_file_cache.txt
      cat $(WORK_DIR)/md5sum_file_cache.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_file_cache.txt1
      echo "----------------------------------------------"
      diff $(WORK_DIR)/md5sum_block_cache_write.txt1 $(WORK_DIR)/md5sum_file_cache.txt1
      if [ $? -ne 0 ]; then
        exit 1
      fi
    displayName: 'Compare md5Sum'

  - template: 'mount.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}
      prefix: ${{ parameters.idstring }}
      ro_mount: true
      mountStep: 
        script: |
          $(WORK_DIR)/blobfuse2 mount ${{ parameters.mount_dir }} --config-file=${{ parameters.config_file }} --default-working-dir=$(WORK_DIR) ${{ parameters.mnt_flags }}

  - script: |
      rm -rf $(WORK_DIR)/localfile*
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200,1024,2048,4096}; do echo $i; done | parallel --will-cite -j 5 'head -c {}M < /dev/urandom >  $(WORK_DIR)/localfile{}'
    displayName: 'Generate local files'

  - script: |
      rm -rf ${{ parameters.mount_dir }}/remotefile*
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200,1024,2048,4096}; do echo $i; done | parallel --will-cite -j 5 'cp  $(WORK_DIR)/localfile{} ${{ parameters.mount_dir }}/remotefile{}'
    displayName: 'Upload local files'

  - script: |
      md5sum $(WORK_DIR)/localfile* > $(WORK_DIR)/md5sum_local_modified.txt
      md5sum ${{ parameters.mount_dir }}/remotefile* > $(WORK_DIR)/md5sum_remote_modified.txt
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_local_modified.txt
      cat $(WORK_DIR)/md5sum_local_modified.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_local_modified.txt1
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_remote_modified.txt
      cat $(WORK_DIR)/md5sum_remote_modified.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_remote_modified.txt1
      echo "----------------------------------------------"
      diff $(WORK_DIR)/md5sum_local_modified.txt1 $(WORK_DIR)/md5sum_remote_modified.txt1
      if [ $? -ne 0 ]; then
        exit 1
      fi
      head -c 13M < /dev/urandom >  $(WORK_DIR)/additionaldata.data
    displayName: 'Compare MD5 before modification'

  - script: |
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200,1024,2048,4096}; do echo $i; done | parallel --will-cite -j 5 'cat  $(WORK_DIR)/additionaldata.data >> $(WORK_DIR)/localfile{}' 
      ls -lh  $(WORK_DIR)/localfile*
    displayName: 'Modify local files'

  - script: |
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200,1024,2048,4096}; do echo $i; done |  parallel --will-cite -j 5 'cat  $(WORK_DIR)/additionaldata.data >> ${{ parameters.mount_dir }}/remotefile{}'
      ls -lh ${{ parameters.mount_dir }}/remotefile*
    displayName: 'Modify remote files'

  - script: |
      $(WORK_DIR)/blobfuse2 unmount all
    displayName: 'Unmount RW mount'

  - template: 'mount.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}
      prefix: ${{ parameters.idstring }}
      ro_mount: true
      mountStep: 
        script: |
          $(WORK_DIR)/blobfuse2 mount ${{ parameters.mount_dir }} --config-file=${{ parameters.config_file }} --default-working-dir=$(WORK_DIR) ${{ parameters.mnt_flags }}

  - script: |
      md5sum $(WORK_DIR)/localfile* > $(WORK_DIR)/md5sum_local_modified.txt
      md5sum ${{ parameters.mount_dir }}/remotefile* > $(WORK_DIR)/md5sum_remote_modified.txt
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_local_modified.txt
      cat $(WORK_DIR)/md5sum_local_modified.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_local_modified.txt1
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_remote_modified.txt
      cat $(WORK_DIR)/md5sum_remote_modified.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_remote_modified.txt1
      echo "----------------------------------------------"
      diff $(WORK_DIR)/md5sum_local_modified.txt1 $(WORK_DIR)/md5sum_remote_modified.txt1
      if [ $? -ne 0 ]; then
        exit 1
      fi
    displayName: 'Compare MD5 of modified files'

  - script: |
      rm -rf $(WORK_DIR)/localfile*
      rm -rf ${{ parameters.mount_dir }}/myfile*
    displayName: 'Copy files using block-cache'

  - script: |
      $(WORK_DIR)/blobfuse2 unmount all
    displayName: 'Unmount RW mount'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: blobfuse2-logs.txt
      artifactName: 'blobfuse_block_cache.txt'
    condition: failed()
    
  - script: |
      tail -n 200 blobfuse2-logs.txt
    displayName: 'View Logs'
    condition: failed()

  - template: 'cleanup.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}