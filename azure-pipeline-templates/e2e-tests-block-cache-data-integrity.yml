parameters:
  - name: conf_template
    type: string
  - name: config_file
    type: string
  - name: container
    type: string
  - name: temp_dir
    type: string
  - name: mount_dir
    type: string    
  - name: idstring
    type: string
  - name: adls
    type: boolean
  - name: distro_name
    type: string
  - name: quick_test
    type: boolean
    default: true
  - name: verbose_log
    type: boolean
    default: false
  - name: clone
    type: boolean
    default: false

steps:    
  - script: |
      df -h $(WORK_DIR)
      for i in $(seq 1 10); do echo $(shuf -i 0-4294967296 -n 1); done | parallel --will-cite -j 5 'head -c {} < /dev/urandom > $(WORK_DIR)/datafiles_{}'
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200}; do echo $i; done | parallel --will-cite -j 5 'head -c {}M < /dev/urandom > $(WORK_DIR)/mixedfiles_{}.txt'
      for i in {1,2,3,4,5,6,7,8,9,10,20,30,50,100,200}; do echo $i; done | parallel --will-cite -j 5 'head -c {}M < /dev/urandom > $(WORK_DIR)/mixedfiles_{}.png'
      cd $(WORK_DIR)
      python3 $(WORK_DIR)/azure-pipeline-templates/generate-parquet-files.py
      ls -lh $(WORK_DIR)/mixedfiles_*
      ls -lh $(WORK_DIR)/datafiles_*
    displayName: 'Generate data on Local'

  - script: |
      md5sum $(WORK_DIR)/datafiles_* > $(WORK_DIR)/md5sum_original_files.txt
      md5sum $(WORK_DIR)/mixedfiles_* >> $(WORK_DIR)/md5sum_original_files.txt
    displayName: 'Generate md5Sum on Local' 

  - script: |
      stat -c '%s %n' $(WORK_DIR)/datafiles_* > $(WORK_DIR)/stat_original_files.txt
      stat -c '%s %n' $(WORK_DIR)/mixedfiles_* >> $(WORK_DIR)/stat_original_files.txt
    displayName: 'Storing file size on Local'

  - template: 'mount.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}
      prefix: ${{ parameters.idstring }}
      ro_mount: true
      mountStep: 
        script: |
          $(WORK_DIR)/blobfuse2 mount ${{ parameters.mount_dir }} --config-file=${{ parameters.config_file }} --default-working-dir=$(WORK_DIR)

  - script: |
      cp $(WORK_DIR)/datafiles_* ${{ parameters.mount_dir }}
      cp $(WORK_DIR)/mixedfiles_* ${{ parameters.mount_dir }}
      ls -lh ${{ parameters.mount_dir }} > $(WORK_DIR)/ls_block_cache.txt
    displayName: 'Copy files with Block-Cache'

  - script: |
      echo "----------------------------------------------"
      cat $(WORK_DIR)/ls_block_cache.txt
    displayName: 'Print contents of Block-Cache'

  - script: |
      md5sum ${{ parameters.mount_dir }}/datafiles_* > $(WORK_DIR)/md5sum_block_cache.txt
      md5sum ${{ parameters.mount_dir }}/mixedfiles_* >> $(WORK_DIR)/md5sum_block_cache.txt
    displayName: 'Generate md5Sum with Block-Cache'

  - script: |
      stat -c '%s %n' ${{ parameters.mount_dir }}/datafiles_* > $(WORK_DIR)/stat_block_cache.txt
      stat -c '%s %n' ${{ parameters.mount_dir }}/mixedfiles_* >> $(WORK_DIR)/stat_block_cache.txt
    displayName: 'Generating file size with Block-Cache'

  - script: |
      $(WORK_DIR)/blobfuse2 unmount all
    displayName: 'Unmount RW mount'

  - script: |
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_original_files.txt
      cat $(WORK_DIR)/md5sum_original_files.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_original_files.txt
      echo "----------------------------------------------"
      cat $(WORK_DIR)/md5sum_block_cache.txt
      cat $(WORK_DIR)/md5sum_block_cache.txt | cut -d " " -f1 > $(WORK_DIR)/md5sum_block_cache.txt
      echo "----------------------------------------------"
      diff $(WORK_DIR)/md5sum_original_files.txt $(WORK_DIR)/md5sum_block_cache.txt
      if [ $? -ne 0 ]; then
        exit 1
      fi
    displayName: 'Compare md5Sum'

  - script: |
      echo "----------------------------------------------"
      cat $(WORK_DIR)/stat_original_files.txt
      echo "----------------------------------------------"
      cat $(WORK_DIR)/stat_block_cache.txt      
      echo "----------------------------------------------"
      diff $(WORK_DIR)/stat_original_files.txt $(WORK_DIR)/stat_block_cache.txt
      if [ $? -ne 0 ]; then
        exit 1
      fi
    displayName: 'Validate file size'

  - script: |
      cat $(WORK_DIR)/ls_block_cache.txt
    displayName: 'Print contents of Block-Cache'

  - template: 'cleanup.yml'
    parameters:
      working_dir: $(WORK_DIR)
      mount_dir: ${{ parameters.mount_dir }}
      temp_dir: ${{ parameters.temp_dir }}